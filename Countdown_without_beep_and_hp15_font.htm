<!DOCTYPE html>
<html lang="bg">
<head>
<meta charset="UTF-8">
<title>Countdown</title>
<style>
@font-face {
  font-family: 'HP15C';
  src: url('https://raw.githubusercontent.com/Xname41/projects/main/HP-15C_Simulator_Font.ttf') format('truetype');
}
body {
  font-family: 'HP15C', monospace, sans-serif;
  background: #121212;
  color: white;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  margin: 0;
  user-select: none;
  cursor: none;
}
#stopwatch {
  text-align: center;
  letter-spacing: 0.05em;
  font-size: 14em;
}
.blink { visibility: hidden; }
</style>
</head>
<body>
<div id="stopwatch">00:00:05:00</div>

<script>
let timerInterval = null, running=false, editMode=-1;
let totalTime = {h:0, m:0, s:0, cs:0}, remainingMs=0, directInput="";
let initialTime = {h:0, m:0, s:0, cs:0}; 
let enterReset = false; 
let activeKeys = new Set();
let blinkState = true;
let zeroMode = false;

function pad(n){ return n.toString().padStart(2,"0"); }

function render(){
    let h=totalTime.h, m=totalTime.m, s=totalTime.s, cs=totalTime.cs;
    if(running){
        if(remainingMs<=0){ 
            clearInterval(timerInterval); 
            running=false; 
            remainingMs=0; 
            zeroMode = true;
        } else {
            h=Math.floor(remainingMs/3600000);
            m=Math.floor((remainingMs%3600000)/60000);
            s=Math.floor((remainingMs%60000)/1000);
            cs=Math.floor((remainingMs%1000)/10);
        }
    }

    if(zeroMode){ h=m=s=cs=0; }

    let str=`${pad(h)}:${pad(m)}:${pad(s)}:${pad(cs)}`;

    if(editMode>=0){
        let parts=str.split(":");
        for(let i=0;i<4;i++){
            if(i===editMode){
                parts[i]=parts[i].split("").map(d=>{
                    let span=document.createElement("span");
                    span.textContent=d;
                    span.className="blink";
                    if(activeKeys.size>0) span.style.visibility="visible";
                    return span.outerHTML;
                }).join("");
            }
        }
        str=parts.join(":");
    }

    if(zeroMode){
        str = str.split("").map(c=>`<span class="blink">${c}</span>`).join("");
    }

    document.getElementById("stopwatch").innerHTML=str;
}

function startStop(){
    if(running){ 
        clearInterval(timerInterval); 
        running=false; 
        enterReset = false;   // <<< връщаме флага след всяко спиране
    } else {
        if(zeroMode){
            zeroMode = false;
            remainingMs = totalTime.h*3600000 + totalTime.m*60000 + totalTime.s*1000 + totalTime.cs*10;
            render();
            return;
        }
        if(remainingMs <= 0){
            remainingMs = totalTime.h*3600000 + totalTime.m*60000 + totalTime.s*1000 + totalTime.cs*10;
        }

        if(remainingMs>0){
            let last=Date.now();
            timerInterval=setInterval(()=>{
                let now=Date.now();
                remainingMs-=(now-last);
                last=now;
                render();
            },10);
            running=true;
        }
    }
}

function saveInitialTime(){ initialTime = {...totalTime}; }
function restoreInitialTime(){
    totalTime = {...initialTime};
    remainingMs = totalTime.h*3600000 + totalTime.m*60000 + totalTime.s*1000 + totalTime.cs*10;
    zeroMode = false;
    render();
}

function nextEdit(){ 
    if(running) return; 
    if(zeroMode) zeroMode = false;

    editMode++; 
    directInput=""; 
    if(editMode>3) editMode=-1; 
    if(editMode===-1){ saveInitialTime(); }
    render();
}

function adjustValue(delta){
    if(editMode===-1) return;
    if(editMode===0) totalTime.h=(totalTime.h+delta+100)%100;
    if(editMode===1) totalTime.m=(totalTime.m+delta+60)%60;
    if(editMode===2) totalTime.s=(totalTime.s+delta+60)%60;
    if(editMode===3) totalTime.cs=(totalTime.cs+delta+100)%100;
    render();
}

function enterFullscreen(){ if(!document.fullscreenElement) document.documentElement.requestFullscreen().catch(()=>{}); }
function exitFullscreen(){ if(document.fullscreenElement) document.exitFullscreen(); }

setInterval(()=>{ 
    if(editMode>=0 && activeKeys.size===0){
        blinkState = !blinkState;
        document.querySelectorAll(".blink").forEach(el=> el.style.visibility = blinkState ? "visible":"hidden");
    }
    if(zeroMode){
        blinkState = !blinkState;
        document.querySelectorAll(".blink").forEach(el=> el.style.visibility = blinkState ? "visible":"hidden");
    }
}, 500);

document.addEventListener("keydown", e=>{
    if(e.code==="Space") {
        startStop();
    }
    else if(e.key==="Enter") {
        if(editMode === -1) {
            if(!enterReset) {
                restoreInitialTime();
                enterReset = true;
            } else {
                nextEdit();
                enterReset = false;
            }
        } else {
            nextEdit();
        }
    }
    else if(editMode>=0 && (e.code==="ArrowUp"||e.code==="ArrowDown"||(e.key>='0' && e.key<='9'))){
        activeKeys.add(e.code||e.key);
        document.querySelectorAll(".blink").forEach(el=>el.style.visibility="visible");
        if(e.code==="ArrowUp") adjustValue(1);
        else if(e.code==="ArrowDown") adjustValue(-1);
        else if(e.key>='0' && e.key<='9'){
            directInput += e.key;
            if(directInput.length>2) directInput=directInput.slice(-2);
            let val=parseInt(directInput);
            if(editMode===0) totalTime.h=Math.min(99,val);
            if(editMode===1) totalTime.m=Math.min(59,val);
            if(editMode===2) totalTime.s=Math.min(59,val);
            if(editMode===3) totalTime.cs=Math.min(99,val);
            render();
        }
    }
    else if(e.key.toLowerCase()==="f") enterFullscreen();
    else if(e.key==="Escape") exitFullscreen();
});

document.addEventListener("keyup", e=> activeKeys.delete(e.code||e.key));

function updateFontSize() {
    const width = window.innerWidth;
    const height = window.innerHeight;
    const newFontSize = Math.min(width / 6, height / 1.5);
    document.getElementById("stopwatch").style.fontSize = newFontSize + "px";
}

updateFontSize();
window.addEventListener("resize", updateFontSize);

render();
</script>
</body>
</html>
